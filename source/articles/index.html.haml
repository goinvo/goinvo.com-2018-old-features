- content_for(:title) do
  = "Involution Studios Articles"
- content_for(:page_head) do
  = stylesheet_link_tag "articles/index"
  = javascript_include_tag "hubspot_blog_posts"
  :javascript
    function renderBlogPosts(posts) {
      var blogArticleList = $('ul.blog-article-list');
      if (!posts) {
        blogArticleList.text('Oops! We can\'t load our blog articles right now, but you can click the link below to see them all.')
        return;
      };
      $.each(posts, function(i, post) {
        blogArticleList.append('<li><a href="' + post.link + '"><div class="blog-post-container" style="background-image: url(\'' + post.imageUrl + '\')"><div class="blog-post-title">' + post.title + '</div></div></a></li>');
      });
    }
    $(function() {
      getHubspotBlogPosts(renderBlogPosts);

      var $featureArticleListContainer = $('.feature-article-list-container');
      var numOfFeatures = $('.feature-article-list').find('li').length;
      var featureHeight = $('.feature-article-list').find('li').height();

      $featureArticleListContainer.css('max-height', 3 * featureHeight);

      $featureArticleListContainer.on('transitionend MSTransitionEnd webkitTransitionEnd oTransitionEnd',
        function() {
          $(this).removeClass('transitioning');
        }
      );
      $('#show-all-features').click(function() {
        if ($featureArticleListContainer.hasClass('show-all')) {
          $featureArticleListContainer.removeClass('show-all')
          $featureArticleListContainer.addClass('transitioning');
          $featureArticleListContainer.css('max-height', 3 * featureHeight);
        } else {
          $featureArticleListContainer.addClass('show-all')
          $featureArticleListContainer.addClass('transitioning');
          $featureArticleListContainer.css('max-height', numOfFeatures * featureHeight);
        }
        $(this).text(function(i, text) {
          return text === "Show All Features" ? "Minimize Features" : "Show All Features";
        });
      });
    });
  - meta = page_for_meta("articles")
  %meta{:name => "description", :content => "#{meta.description}" }
  %meta{:name => "keywords", :content => "#{meta.keywords}" }
  %meta{:name => "twitter:card", :content => "#{meta.twittercard}"}
  %meta{:name => "twitter:site", :content => "#{meta.twittersite}" }
  %meta{:name => "twitter:title", :content => "#{meta.twittertitle}" }
  %meta{:name => "twitter:description", :content => "#{meta.description}"}
  - if (meta.twitterimage)
    %meta{:name => "twitter:image", :content => "#{meta.twitterimage}"}
- feature_articles = feature_articles_sorted_by_date()
- most_recent_feature = feature_articles.first
%a.most-recent-article-link{ :href => "/features/#{most_recent_feature.url}" }
  %header.most-recent-article{ :id => most_recent_feature.url, :style => "background-image: url('/images/#{most_recent_feature.image}');" }
    .outer-container
      .inner-container
        %span.font-small
          Feature:
          = feature_article_date(most_recent_feature)
        %h1.font-bold= most_recent_feature.title
        %span= most_recent_feature.tag_line
.feature-article-list-container
  .feature-list-title Features
  %ul.feature-article-list
    - feature_articles.each do |article|
      - if !(article == most_recent_feature)
        %li{ :id => article.url }
          %a{ :href => "/features/#{article.url}" }
            .feature-block{ :style => "background-image: url('/images/#{article.image}')" }
              .feature-info
                .feature-label.font-small= feature_article_date(article)
                %h1= article.title
                %span= article.tag_line
.show-features-link-container
  %a#show-all-features Show All Features

.blog-article-list-container
  %ul.blog-article-list
  %a#show-all-articles{ :href => "http://yes.goinvo.com" }Show All Articles
