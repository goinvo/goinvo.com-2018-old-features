- content_for(:title) do
	= "Application and UI Design and Development for Oracle Agile PLM"
- content_for(:page_head) do
	= stylesheet_link_tag "sections/complex-case-studies"
	= javascript_include_tag 'worknav'
	%meta{:name => "description", :content => "Boston area UI design firm Involution re-conceptualized, designed and developed the user interface for Oracle&rsquo;s Agile PLM Web application."}/
	%meta{:name => "keywords", :content => "application design, user interface design, user interface development, agile, plm, product lifecycle management, oracle, involution, boston user interface design"}/
- client = client_for_name("Oracle")

%article#complex-case.oracle
	%header.hero
		.row
			.medium-6.small-12.small-centered.columns
				.title
					%p <img src = "../../images/client_logos/oracle.png" width="300" height="37">
					%h2 Reducing task completion by 50% for Oracle users
					%h3 How our total redesign of Oracle&rsquo;s Agile PLM saved their customers&rsquo; billions.
	.row#mainContent
		.medium-6.small-12.small-centered.columns

			%h2 New redesign, new development process, new UX team
			%p Agile Software was at a crossroads. As a medium-sized, publicly traded company with a well-respected Product Lifecycle Management (PLM) software suite, Agile was profitable and successful. However, a small group of Agile executives including new SVP Raj Bhargava, feared the good times would not last. They recognized that the code base was over a decade old and based on dated technologies. They saw the inefficiencies of the waterfall development process. They noted that Agile had just two people involved with user experience in the entire organization, and they were made up of a product manager and an engineer. They knew that each of these things was a problem, and collectively they represented massive risk. Raj had a vision for the future and the will to see it through.

			.center-image-content.large
				.video-box
					%iframe{:src => "//player.vimeo.com/video/51097938?portrait=0", :width => "640", :height => "360", :frameborder => "0", :webkitallowfullscreen => "", :mozallowfullscreen => "", :allowfullscreen => ""}

			%p.bottom Massive change in a successful company is always difficult. Many are invested in the status quo. Many are comfortable with the way things are. Many can&rsquo;t see the risk with standing still. All of these &ldquo;many&rdquo; people aren&rsquo;t interested in big change. That was the challenge faced by Raj and the other visionary Agile executives: they knew what needed to be done, but faced stiff internal resistance. They rolled up their sleeves. They made their case. And at the end of it they carved out an initial $500,000 to engage a design partner. They only had one chance to get it right, with the bulk of the skeptical organization watching. With their vision at stake, they trusted the future with Involution.

			.center-image-content.large
				%img{:src => "../../images/clients/oracle/oracle-agile-plm-old-user-interface.jpg"}
				.caption Agile&rsquo;s old PLM suite was one of the best solutions in an antiquated market.

			%h2 PLM manages the lifecycle of the world&rsquo;s most complicated products
			%p How many components are in your laptop? Most people assume a few dozen but it is actually hundreds. Getting from the idea of your laptop to that complicated final product is a long, highly complex process. What Agile&rsquo;s PLM suite does is manage that entire workflow, from initial concept all the way thru the end of lifecycle for the product. Agile doesn&rsquo;t just manage what&rsquo;s in the product but what didn&rsquo;t make it in. For each component in the final product there are potentially a handful of other contenders that were considered but not used. In the final analysis <em>thousands</em> of components went into your laptop at one stage or another.

			%p Then, for each of those components, there are many stages: R&D. Design and engineering. Manufacturing. Compliance. Procurement. Accounting. Legal. IP. The list goes on and on. Virtually every department within a product development organization needs to touch this workflow. The complexity inherent in the permutations is immense.

			%p More than managing a complex system, PLM software must accommodate dozens of use cases. A number of operators spend their entire day in PLM. Some use it every day, some once or twice a week, and some one or twice a month. One of our use cases we called the &ldquo;Michael Dell use case&rdquo; because Dell was an Agile customer, and we needed to account for a CEO use case.

			%p.bottom Highly complex software with lots of use cases: these are the kinds of challenges we live to work on.

			%h2 Changing how software gets done
			%p These days &ldquo;agile development processes&rdquo; are assumed as the best way to make software. That&rsquo;s not always true, but it is certainly better than the way things used to be. The old &ldquo;waterfall&rdquo; process was serial, meaning that it was broken up into various stages and these stages happened one after another. That&rsquo;s how Agile (the company, not the software process) and most software companies used to develop software. But Raj knew that, at Agile, this needed to change.

			%p I remember the day I met with Raj and he talked about his vision. He knew about Agile software but he was going beyond that, talking about the Toyota development process for automotives. He gaves us copies of Michael Kennedy&rsquo;s &ldquo;Product Development for the Lean Enterprise&rdquo;. He wanted us to combine those principles with agile software methods and be his cohort in getting the Agile Software company to change.

			%p.bottom Our being the outside expert and champion in the product development was a given. We also worked up and across the organization with Raj, serving as the &ldquo;good cop&rdquo; or &ldquo;bad cop&rdquo; as the situation dictated to help him socialize and integrate the methods.

			%h2 Supporting the old while imagining the new
			%p We started with research. Over a multi-month research process we got to know Agile&rsquo;s team, their customers, their software, and their competitors. We included the Agile UX team and other key stakeholders in the customer research as well, and it was eye-opening. In some cases it validated their strong internal research and ideas for improvement. In others it introduced new insights. In every case it brought our team, Agile&rsquo;s UX team, and their broader product organization closer together.

			%p.bottom Our design work with Agile followed two paths: the suite redesign and the incremental support of existing products. It would be years before the redesign is fully deployed to all customers, and Agile was committed to strong support of their current customers. This meant while the sexiness of reimagining of PLM was happening plenty of in-the-trenches incremental UX fixes were happening on the old product as well.

			.center-image-content.large
				%img{:src => "../../images/clients/oracle/oracle-agile-plm-ui-design-early-prototype.jpg"}
				.caption To discover the right approach to this complicated application we created an initial &ldquo;concept car&rdquo;, and used it extensively with Oracle customers.

			%h2 Taking the concept car out for a ride
			%p Involution pioneered getting code prototypes made as quickly as possible among UX firms. For many years UX firms didn&rsquo;t &ldquo;do&rdquo; code and, even once they did, it took a back seat to sacred cow processes such as personas and wireframes. We don&rsquo;t &ldquo;do&rdquo; personas and wireframes. Once the research and architecture are done we could straight to pixel-perfect mockups, then almost immediately to a working prototype. Back when we worked with Agile we called that working prototype a concept car.

			%p The Agile concept car was an essential step in the design process. Created just a few months into the design phase of our work with Agile it was a fully coded prototype of the top levels of the redesign. It became the center of our work, and the way Agile worked with us.

			%p Given that Agile PLM is a suite of products they had a whole team of product manager. Each of these people were supporting different products and - aside from a shared interest in Agile&rsquo;s success - had a variety of triggers and motivators. The concept car became the focal point of everything. We had lots of meetings driving around the concept car for groups large and small: all of those product managers, individual product managers and their leadership team, top-level executive teams, a customer testing team that we helped Agile to create. The speed and precision this added to the redesign was significant.

			%p.bottom Of course, it also paid dividends for Agile sales and service. On the sales side, Agile could now show actual, working software that was more than just a promise for the future: it was dramatically superior to what they already had or seen from other competitors. On the service side, Agile was dealing with nagging complaints and issues about their current offering and - in attempting to mitigate them - the service organization was able to use the concept car to keep them satisfied based on what was to come.

	.row#quote
		.small-centered.columns
			%h2.quote#bigQuote &ldquo;We didn&rsquo;t bring in Involution to redesign our product, which they did. We chose Involution to help us take our two user experience people and build an outstanding team. By the time we were done working together we had a large cross-functional team and a completely new and effective way to design and develop an exceptional next generation product suite.&rdquo;
			%p.quote-author &mdash; Steve Van Lare, Oracle, VP Engineering

	.row#mainContent2
		.medium-6.small-12.small-centered.columns
			%h2 Building skills, building teams
			%p Another change management aspect was building the Agile UX organization. Like many software companies born in the 1990&rsquo;s, Agile thought UX was a programming language. Engineers intuitively designed the software combining their strong system understanding with a lack of design training and art ability. The results worked but weren&rsquo;t pretty.

			%p A product manager and an engineer with good design instincts were re-purposed as an initial UX team but they needed training. And Agile as an organization needed a UX team an order of magnitude larger to properly support their various products making up the Agile PLM suite.

			%p.bottom So while the budget for us internally was secured under the auspices of redesigning the software suite&mdash;and that was the majority of our efforts as well&mdash;training Agile&rsquo;s new makeshift UX team and helping them grow into a large, best-of-breed UX team was an important supplement. Our senior staff gave them hands-on training. We helped them architect the right future UX organization, write job descriptions, and get the word out there. While they need us when we started our work together, by the time we were done they could fend for themselves.

			%h2 A suitor came a-calling
			%p Word of the Agile redesign was getting out. The prototype was being sold to customers old and new, and the positive impact was immediate. Customers concerned about the long-term health of Agile software were placated; prospects that liked Agile but didn&rsquo;t see a reason to change now saw a reason to change. The new software was clearly going to be a game changer.

			%p Of course, customers weren&rsquo;t the only ones watching. Competitors were, too. One of Agile&rsquo;s competitors was Oracle. Agile&rsquo;s software had always been better than Oracle&rsquo;s, but Oracle was able to sell their PLM within a larger enterprise suite. Unknown to Agile, Oracle was ramping up to redesign their own PLM offering. Once Oracle got wind of what Agile was doing and saw the new design and roadmap for themselves plans changed. They decided that taking away one of their top competitors and acquiring the PLM suite that clearly would set a new industry standard made more sense. So, Oracle got together $495 million and purchased Agile outright.

			%p.bottom We can&rsquo;t take credit for the Oracle acquisition, which made so many people associated with Agile very wealthy. But the new software we worked with Oracle on, supported by a mature and productive user experience team, within a lean development process, made Agile a very attractive acquisition target.

			%h2 Taking it to the end
			%p After the Oracle purchase we spent more than a year still working with the Agile team. While the main design was in the rearview mirror so much of software development happens during the engineering when the sexy design and prototyping is over. Filling the nooks and crannies, smoothing the bumps and working with the engineering team to get to production are often unaccounted for UX expenses. Oracle valued our participation all the way.

			%p.bottom The official launch of Oracle&rsquo;s Agile PLM was a big day for the Agile team, and a big day at Involution. Agile was our first million dollar client, and we spent a lot of time together. Seeing all of that work finally become the real thing was exhilarating and immensely satisfying.

			%h2 P.S.&mdash; relishing our impact
			%p After more than three years of working together, leaving Oracle&rsquo;s Agile team was bittersweet. No longer working on a daily basis with our friends on this software we knew and cared about was bitter. Seeing a team of 20 UX professionals working in an efficient, lean development organization was really, really sweet. Raj&rsquo;s vision was manifest, and we appreciated being a part of making it happen.

			%p Then, some months later, the ROI stories started coming in. Bittersweet turned into super-duper-excited:

			%ul
				%li Tests across Oracle&rsquo;s customer base proved our Agile PLM design took users 50% less time to complete a subset of core tasks and a 70% reduction in clicks
				%li Customer Playtex reported a $2.7 million annual labor efficiency improvement and 15% packaging development cost savings
				%li Customer Johnson &amp; Johnson reported a cycle change time reduction of 52%, decreased administrative costs of 25%, reduction of scrap and re-work of $2 million, and passing regulatory audits with minimal costs

			%p.bottom Most of our projects go well but it is seeing results like these that really makes us love this business.




	.row#quote
		.small-centered.columns
			%h2.quote &ldquo;Results showed that, on average, it took users 50% less time to complete a subset of core tasks on Agile 9.3.&rdquo;
			%p.quote-author &mdash; Joel Nave, Oracle, Senior Manager, Applications User Experience
	.row#mainContent2
		.medium-6.small-12.small-centered.columns

			.center-image-content.large
				%img{:src => "../../images/clients/oracle/oracle-agile-plm-ui-design-pixel-perfect-mockups.jpg"}
				.caption Once the interaction model is settled we jump right into high-fidelity mock-ups which fast-tracks communication around and understanding of the design.
	.row#quote
		.small-centered.columns
			%h2.quote &ldquo;With 9.3 we can already see an improved level of usability and productivity.&rdquo;
			%p.quote-author &mdash; Hardeep Gulati, Oracle, VP, PLM Product Strategy
	.row#mainContent2
		.medium-6.small-12.small-centered.columns
			.center-image-content.large
				%img{:src => "../../images/clients/oracle/oracle-plm-ui-design-code-engineering-development.jpg"}
				.caption Great code is a staple of everything we do. We&rsquo;ve had a number of engineering &ldquo;firsts&rdquo; in a browser: with Oracle, we enabled multi-modal browser windows to share state and information in ways that had never been publicly done before.
			.center-image-content.large
				%img{:src => "../../images/clients/oracle/oracle-agile-plm-ui-design-development.jpg"}
				.caption By the end of the project the Oracle team sometimes couldn&rsquo;t tell the difference between the high-quality design prototype we created and their own production stack.
	.row#quote
		.small-centered.columns
			%p.block-header Results
			%h2.quote#bigQuote Playtex enjoyed $2.7 million in labor efficiency improvement and 15% packaging development cost savings with Agile 9.3.
			%h2.quote#bigQuote Johnson &amp; Johnson reduced cycle change time by 52%, administrative cost by 25%, reduced scrap and re-work by $2 million, and passed regulatory audits with minimal costs with Agile 9.3.
.row#next-project
	.medium-6.small-12.small-centered.columns
		.next-title
			Next Project:
			%span#next
